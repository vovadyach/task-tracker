{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAddTask","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","error","setError","onSubmit","e","preventDefault","htmlFor","placeholder","name","type","onChange","target","value","checked","currentTarget","App","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f04ba8fe.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className='Btn'\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: 'steelblue',\n  text: 'Button',\n};\n\nButton.propTypes = {\n  color: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport Button from './Button';\n\nconst Header = ({ title, onAdd, showAddTask }) => {\n  return (\n    <header className='Header'>\n      <h1>{title}</h1>\n      <Button\n        color={showAddTask ? '#ff0800' : '#008000'}\n        text={showAddTask ? 'Hide Form' : 'Show Form'}\n        onClick={onAdd}\n      />\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: 'Task Tracker',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import { FaTimes } from 'react-icons/fa';\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`Task${task.reminder ? ' reminder' : ''}`}\n      onDoubleClick={() => onToggle(task.id)}\n    >\n      <h3>\n        {task.text}\n        <button className=\"BtnIcon\" onClick={() => onDelete(task.id)}><FaTimes\n          style={{ color: 'red', cursor: 'pointer' }}\n        /></button>\n        \n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from './Task';\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map(task => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('');\n  const [day, setDay] = useState('');\n  const [reminder, setReminder] = useState(false);\n  const [error, setError] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      setError(true);\n      return;\n    }\n\n    onAdd({ text, day, reminder });\n\n    setText('');\n    setDay('');\n    setReminder('');\n    setError(false);\n  };\n\n  return (\n    <form className=\"AddForm\" onSubmit={onSubmit}>\n      <div className={`FormControl${error ? ' has-error' : ''}`}>\n        <label htmlFor=\"task\">Task</label>\n        <input id=\"task\" placeholder=\"Add Task\" name=\"task\" type=\"text\" onChange={(e) => setText(e.target.value)} value={text} />\n        {error && <small className=\"ErrorMessage\">This field is required</small>}\n      </div>\n\n      <div className=\"FormControl\">\n        <label htmlFor=\"dayTime\">Day & Time</label>\n        <input id=\"dayTime\" name=\"dayTime\" onChange={(e) => setDay(e.target.value)} placeholder=\"Add Day & Time\" type=\"text\" value={day} />\n      </div>\n\n      <div className=\"FormControl FormControl--check\">\n        <label htmlFor=\"reminder\">Reminder</label>\n        <input id=\"reminder\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} name=\"reminder\" type=\"checkbox\" />\n      </div>\n\n      <input type=\"submit\" className=\"Btn Btn--block\" />\n    </form>\n  )\n}\n\nexport default AddTask;\n","import Header from './components/Header';\nimport { useState } from 'react';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctors Appointment',\n      day: 'Feb 5th at 2:30pm',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'Meeting at School',\n      day: 'Feb 6th at 1:30pm',\n      reminder: false,\n    },\n    {\n      id: 3,\n      text: 'Meeting at Office',\n      day: 'Feb 8th at 11:30am',\n      reminder: true,\n    },\n  ]);\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(\n      tasks.map(task =>\n        task.id === id\n          ? {\n              ...task,\n              reminder: !task.reminder,\n            }\n          : task\n      )\n    );\n  };\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  return (\n    <div className='Container'>\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAddTask={showAddTask}\n      />\n\n      {showAddTask && <AddTask onAdd={addTask} />}\n\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onToggle={toggleReminder} onDelete={deleteTask} />\n      ) : (\n        <h3>No tasks to show</h3>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}